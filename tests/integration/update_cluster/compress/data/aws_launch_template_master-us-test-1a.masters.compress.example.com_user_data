Content-Type: multipart/mixed; boundary="MIMEBOUNDARY"
MIME-Version: 1.0

--MIMEBOUNDARY
Content-Disposition: attachment; filename="nodeup.sh"
Content-Transfer-Encoding: 7bit
Content-Type: text/x-shellscript
Mime-Version: 1.0

#!/bin/bash
set -o errexit
set -o nounset
set -o pipefail

NODEUP_URL_AMD64=https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/amd64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/nodeup-linux-amd64
NODEUP_HASH_AMD64=585fbda0f0a43184656b4bfc0cc5f0c0b85612faf43b8816acca1f99d422c924
NODEUP_URL_ARM64=https://artifacts.k8s.io/binaries/kops/1.21.0-alpha.1/linux/arm64/nodeup,https://github.com/kubernetes/kops/releases/download/v1.21.0-alpha.1/nodeup-linux-arm64
NODEUP_HASH_ARM64=7603675379699105a9b9915ff97718ea99b1bbb01a4c184e2f827c8a96e8e865

export AWS_REGION=us-test-1




sysctl -w net.core.rmem_max=16777216 || true
sysctl -w net.core.wmem_max=16777216 || true
sysctl -w net.ipv4.tcp_rmem='4096 87380 16777216' || true
sysctl -w net.ipv4.tcp_wmem='4096 87380 16777216' || true


function ensure-install-dir() {
  INSTALL_DIR="/opt/kops"
  # On ContainerOS, we install under /var/lib/toolbox; /opt is ro and noexec
  if [[ -d /var/lib/toolbox ]]; then
    INSTALL_DIR="/var/lib/toolbox/kops"
  fi
  mkdir -p ${INSTALL_DIR}/bin
  mkdir -p ${INSTALL_DIR}/conf
  cd ${INSTALL_DIR}
}

# Retry a download until we get it. args: name, sha, urls
download-or-bust() {
  local -r file="$1"
  local -r hash="$2"
  local -r urls=( $(split-commas "$3") )

  if [[ -f "${file}" ]]; then
    if ! validate-hash "${file}" "${hash}"; then
      rm -f "${file}"
    else
      return
    fi
  fi

  while true; do
    for url in "${urls[@]}"; do
      commands=(
        "curl -f --compressed -Lo "${file}" --connect-timeout 20 --retry 6 --retry-delay 10"
        "wget --compression=auto -O "${file}" --connect-timeout=20 --tries=6 --wait=10"
        "curl -f -Lo "${file}" --connect-timeout 20 --retry 6 --retry-delay 10"
        "wget -O "${file}" --connect-timeout=20 --tries=6 --wait=10"
      )
      for cmd in "${commands[@]}"; do
        echo "Attempting download with: ${cmd} {url}"
        if ! (${cmd} "${url}"); then
          echo "== Download failed with ${cmd} =="
          continue
        fi
        if ! validate-hash "${file}" "${hash}"; then
          echo "== Hash validation of ${url} failed. Retrying. =="
          rm -f "${file}"
        else
          echo "== Downloaded ${url} (SHA256 = ${hash}) =="
          return
        fi
      done
    done

    echo "All downloads failed; sleeping before retrying"
    sleep 60
  done
}

validate-hash() {
  local -r file="$1"
  local -r expected="$2"
  local actual

  actual=$(sha256sum ${file} | awk '{ print $1 }') || true
  if [[ "${actual}" != "${expected}" ]]; then
    echo "== ${file} corrupted, hash ${actual} doesn't match expected ${expected} =="
    return 1
  fi
}

function split-commas() {
  echo $1 | tr "," "\n"
}

function download-release() {
  case "$(uname -m)" in
  x86_64*|i?86_64*|amd64*)
    NODEUP_URL="${NODEUP_URL_AMD64}"
    NODEUP_HASH="${NODEUP_HASH_AMD64}"
    ;;
  aarch64*|arm64*)
    NODEUP_URL="${NODEUP_URL_ARM64}"
    NODEUP_HASH="${NODEUP_HASH_ARM64}"
    ;;
  *)
    echo "Unsupported host arch: $(uname -m)" >&2
    exit 1
    ;;
  esac

  cd ${INSTALL_DIR}/bin
  download-or-bust nodeup "${NODEUP_HASH}" "${NODEUP_URL}"

  chmod +x nodeup

  echo "Running nodeup"
  # We can't run in the foreground because of https://github.com/docker/docker/issues/23793
  ( cd ${INSTALL_DIR}/bin; ./nodeup --install-systemd-unit --conf=${INSTALL_DIR}/conf/kube_env.yaml --v=8  )
}

####################################################################################

/bin/systemd-machine-id-setup || echo "failed to set up ensure machine-id configured"

echo "== nodeup node config starting =="
ensure-install-dir

echo "H4sIAAAAAAAA/+xWT5Pbtg+9+1Nw5jeZXGLJ2uwvbTU51LHTrps4de2k6ZUmYZk1RSogKa/76TsgJf/ZXTfT6bGdzGRXAAgCDw+PK7QNcmLNRlXlgDG+d2/frCar2RRVC0gmxsDwtQZZsg3XDgaM1dzwClbeIq9gorlz4ErmMcBAWOO5MoDLYLyqoWRHizw5JSXWtnoPLeiSKbOxA8ZaQKesKVmR3WbFzUBasUs1uJ1qZsZ5rnV3DxiBh8Yra7rimQlaD8ALOdHBeUBHB6EF411q45j+JaV/GftQ5mnfLqxhvJitADsUuNZ2v0DVKg0VYRGrYIwbaw61DW4c/PaEEG/UOEgFRkC8fcgoIxrw4DLXikzChgftU2i6ZmKD8SUryBb81qL6g1ODcyuhZGO95wc3pjIGjK2VkWMpEZwr2SiL/waMxWku0LZKApY0zUE/vrGslaMeFzpUynRVfeA1uIYLeK82IA5CQzS/V7XyS24qwPhNBSoBYyGoxmiapgbOSXBu/2g1YCx/BcIamZzz4LlXpjoW8xnWW2t30fkr10ped3+wEpbgPCpBaaNtCc4GFPBLsJ5Tq17IBGbX39b7xpV5Xtx8E0EqytvRqLiM/LkFRCX7QeWJM/978ujNgDFV8wpKtvvWZZXATNmcZjvkjXKJLm2R3RRxHuTQ4BcIG0CEfmQfD01/28x4QMP1bBE/76zzhtdpCm/vz3ynbaEaEL4EcH4LXAJGUoCMs0xZeVUhVNxbfBj79t4jv4u/UlXqvj/y23AJtfUwjBHDh+d+RBuadO7hgeh6GP/JUek1PH2EvLTWIALCwqIv2e3ty2g5J9rMuUA87kfBG5WpDrBM2LohMDO453WjgQyPMvz0+d3q03L2N1LktgGjZN4W+e/7nTtl7GRltoh7UbJiNMpe3RI18igmLm3CGy52YGQZGZaEZGKNR6s14DwK51FQBPdAtJ7Mpkt3khTvudhOgf5f0vIIpWF1MGIBqKwsWVGP3LVlF6lKyphK/O5VKrE4OYkopMtP4ieinAaECaVf2uBJ23tdu8J9cexwWHctnpZAJ+JpiHub9PbMduz7kuHBwaXqTBAkGK+47qGiqxdo7w/lVxtvwjKxM/qoz223af32l+z593zvnl9vsolXnfV1Vi8FrMQWZNBpvFdyuGPMP8OnE5by+gskKlrL7hln7uA81PJoX1rrS5Z/hUXTD6sznhejM4+Nb2f/mRGX9fGtmcI6VJUy1R03UtP69z1Am9T7jqMsWQ21xUPGW640nXtdjEZz9cJYCRt3YX7WGxX9dD8gwOv/P3sRUX4U2lsvYv965IRnYv6CE4p5yzHXap13QOengEdMNeD3FnfpXe12yyhyWDPn7ksA5GnHL0WD4GysnHOjNuB8dzF4kZ/+VsjrzusGNSek3/03+H/b4OllrRSh3SkM9dvP+08AAAD//wEAAP//kmdU7MALAAA=" | base64 -d | gzip -d > conf/cluster_spec.yaml

echo "H4sIAAAAAAAA/1TOwU7DMBAE0Lu/wj+QuggOlSUuLaKtRAKKoojr4mzAws4ar02cv0ehp1xHb0ZzcpSHt0i/dsCoJcwsTjSN9vMIjFp69CNrpYzLnDDyDgv44HBnyCtDPkTkTSiuEyeYDJ4j5dCAX0dg7VaZq4ScqjvYopYcaln/I9HQgDncLlyAv7Rc9paLeSnL9b5rX/fP5XxRH92hL+N8tEv9XtzcHuxP//Tw/Sj+AAAA//8BAAD///+TVvHPAAAA" | base64 -d | gzip -d > conf/kube_env.yaml

download-release
echo "== nodeup node config done =="

--MIMEBOUNDARY
Content-Disposition: attachment; filename="myscript.sh"
Content-Transfer-Encoding: 7bit
Content-Type: text/x-shellscript
Mime-Version: 1.0

#!/bin/sh
echo "nodes: The time is now $(date -R)!" | tee /root/output.txt

--MIMEBOUNDARY--
