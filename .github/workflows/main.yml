name: CI

on:
  push:
    tags:
      - '*'
    branches:
      - 'master*'
      - 'release*'
  pull_request:
    branches:
      - 'master*'
      - 'release*'

env:
  GOPROXY: https://proxy.golang.org
  GOPATH: ${{ github.workspace }}/go

permissions:
  contents: read

jobs:
  build-linux-amd64:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up go
        uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f
        with:
          go-version: '1.19.0'

      - name: Checkout full
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: ${{ env.GOPATH }}/src/k8s.io/kops
          fetch-depth: 0

      - name: Checkout shallow
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        if: startsWith(github.ref, 'refs/tags/') == false
        with:
          path: ${{ env.GOPATH }}/src/k8s.io/kops

      - name: Make all examples test
        working-directory: ${{ env.GOPATH }}/src/k8s.io/kops
        run: |
          make all examples test

      - name: Upload Linux binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: kops-linux-amd64
          path: ${{ env.GOPATH }}/src/k8s.io/kops/.build/local/kops
          if-no-files-found: error
          retention-days: 1

  build-macos-amd64:
    runs-on: macos-latest
    steps:
      - name: Set up go
        uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f
        with:
          go-version: '1.19.0'

      - name: Checkout full
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: ${{ env.GOPATH }}/src/k8s.io/kops
          fetch-depth: 0

      - name: Checkout shallow
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        if: startsWith(github.ref, 'refs/tags/') == false
        with:
          path: ${{ env.GOPATH }}/src/k8s.io/kops

      - name: Make kops examples test
        working-directory: ${{ env.GOPATH }}/src/k8s.io/kops
        run: |
          make kops examples test

      - name: Upload macos binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: kops-darwin-amd64
          path: ${{ env.GOPATH }}/src/k8s.io/kops/.build/local/kops
          if-no-files-found: error
          retention-days: 1

  build-windows-amd64:
    runs-on: windows-2019
    steps:
      - name: Set up go
        uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f
        with:
          go-version: '1.19.0'

      - name: Checkout full
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        if: startsWith(github.ref, 'refs/tags/')
        with:
          path: ${{ env.GOPATH }}/src/k8s.io/kops
          fetch-depth: 0

      - name: Checkout shallow
        uses: actions/checkout@v2
        if: startsWith(github.ref, 'refs/tags/') == false
        with:
          path: ${{ env.GOPATH }}/src/k8s.io/kops

      - name: Make kops examples test
        working-directory: ${{ env.GOPATH }}/src/k8s.io/kops
        run: |
          make kops examples test-windows

      - name: Upload windows binary
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v2
        with:
          name: kops-windows-amd64
          path: ${{ env.GOPATH }}/src/k8s.io/kops/.build/local/kops
          if-no-files-found: error
          retention-days: 1

  verify:
    runs-on: ubuntu-20.04
    steps:
      - name: Set up go
        uses: actions/setup-go@268d8c0ca0432bb2cf416faae41297df9d262d7f
        with:
          go-version: '1.19.0'

      - name: Checkout repository
        uses: actions/checkout@2541b1294d2704b0964813337f33b291d3f8596b
        with:
          path: ${{ env.GOPATH }}/src/k8s.io/kops

      - name: Make quick-ci
        working-directory: ${{ env.GOPATH }}/src/k8s.io/kops
        run: |
          make quick-ci

  release:
    runs-on: ubuntu-20.04
    if: startsWith(github.ref, 'refs/tags/')
    needs:
      - build-linux-amd64
      - build-macos-amd64
      - build-windows-amd64
      - verify
    steps:
      - name: Download all kops binary artifacts
        uses: actions/download-artifact@v2

      - name: Rename kops binary artifacts
        run: |
          mv kops-linux-amd64/kops kops-linux-amd64/kops-linux-amd64
          mv kops-darwin-amd64/kops kops-darwin-amd64/kops-darwin-amd64
          mv kops-windows-amd64/kops kops-windows-amd64/kops-windows-amd64

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          fail_on_unmatched_files: true
          files: |
            kops-linux-amd64/kops-linux-amd64
            kops-darwin-amd64/kops-darwin-amd64
            kops-windows-amd64/kops-windows-amd64
